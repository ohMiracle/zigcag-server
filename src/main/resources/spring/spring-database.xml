<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 配置整合mybatis过程 -->
    <!--1：配置数据库相关参数-->
    <context:property-placeholder location="classpath:common/config.properties"/>

    <!--2：Alibaba德鲁伊连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${mysql.url}"/>
        <property name="driverClassName" value="${mysql.driverClass}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
        <property name="connectionProperties">
            <value>clientEncoding=utf-8;serverEncoding=utf-8;</value>
        </property>
    </bean>

    <!--3：配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--扫描entity包，使用别名-->
        <!--当有多个包时，可以用分号隔开value="cn.seckill.entity;cn.seckill.bean"-->
        <!--<property name="typeAliasesPackage" value="com.ecloude.model"/>-->
        <!--扫描sql配置文件：mapper需要的xml文件-->
        <!--如果放在类路径下，将映射失败java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for cn.seckill.dao.RepertoryDao.queryById-->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            helperDialect=mysql
                            pageSizeZero=true
                            reasonable=true
                            supportMethodsArguments=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--4:配置扫描Dao接口包，动态实现Dao接口，注入到Spring 容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描Dao接口包-->
        <!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
        <property name="basePackage" value="com.zigcag.rbac.dao"/>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据库连接池-->
        <!--引用另一个配置文件中的bean-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置基于注解的申明式事务
        默认使用注解来管理事务行为
    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="*" />-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--<aop:config>-->
    <!--<aop:pointcut id="transaction" expression="execution(* service..*(..))"/>-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="transaction"/>-->
    <!--</aop:config>-->
</beans>